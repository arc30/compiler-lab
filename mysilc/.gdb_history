list main
list
list
list 1
list 1
break 77
list 7
break 100
run
run inpfile
print *Gsymbol
print *head
c
print *paramHead 
c
q
run inpfile
bt
run inpfile
q
run inpfile
bt
q
list 117
break 114
break 117
run inpfile
print currType 
print *currType 
print currType 
ls
print *paramHead
print *paramTail
c
break 116
print *paramTail
print *paramHead
c
q
run <inpfile
run
run < inpfile
run inpfile
bt
q
l 100
l 200
l 500
l
list main
list syntaxtree.c
list makeAssignmentNode 
break 184
break 189
run
run inpfile 
print l->type
print*( l->type)
print *l
q
list makeFuncdefNode 
break 67
break 71
run inpfile 
print *l
print *(l->lEntry )
print (l->lEntry )
print (l->gEntry )
print *(l->gEntry )
print nodetype 
q
break 67
break 71
run inpfile 
list makeFuncdefNode 
break 67
break 71
run inpfile 
c
c
c
c
c
c
c
print lHead
print *lHead
print *lHead->next 
print lHead->next 
print *(lHead->next )
list
c
print *(lHead->next )
print *(lHead)
print *(lHead->next )
print *(lHead->next->next )
print *(lHead->next )
q
list
list
q
break syntaxtree.y 53
break syntaxtree.y:53
run inpfile 
q
break syntaxtree.c:53127
break syntaxtree.c:127
run inpfile 
print ch
c
print ch
print *temp
print temp
c
print ch
c
c
c
print ch
c
print ch
c
print ch
list
list makeLeafNodeVar 
del
break 127
c
print ch
print temp
print *temp
print *Ltemp
list
print type
s
print type
print val
list
break 36
c
print ch
q
break 36
del
print makeLeafNodeVar 
list makeLeafNodeVar 
break 127
c
run inpfile 
c
c
c
c
print type
print temp
q
q
list
break makeLeafNodeVar 
run inpfile
c
c
c
c
print temp
print *temp
s
c
c
c
c
c
c
print temp
print *temp
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
finish
finish
print *temp
s
s
finish
print Ltemp 
print *Ltemp 
c
s
finish
s
finish
bt
s
s
s
s
finish
sq
q
list makeLeafNodeVar 
break 111
c
run inpfile 
c
c
print *LsymbolHead 
c
c
print *LsymbolHead 
q
list makeAssignmentNode 
break 188
del
break 188
del
q
list makeAssignmentNode 
break 188
run inpfile 
print nodetype 
nodetype==ASSGN
ASSGN
print ASSGN
print ARR
print (nodetype == ARR)
print l->nodetype 
print *l->nodetype 
print *(l->nodetype) 
print (l->nodetype) 
print l
print *l
print *(l->gEntry )
print *r
s
s
print l->type
print r->type
s
s
q
