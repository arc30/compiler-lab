c
c
c
print temp
print *temp
s
c
c
c
c
c
c
print temp
print *temp
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
finish
finish
print *temp
s
s
finish
print Ltemp 
print *Ltemp 
c
s
finish
s
finish
bt
s
s
s
s
finish
sq
q
list makeLeafNodeVar 
break 111
c
run inpfile 
c
c
print *LsymbolHead 
c
c
print *LsymbolHead 
q
list makeAssignmentNode 
break 188
del
break 188
del
q
list makeAssignmentNode 
break 188
run inpfile 
print nodetype 
nodetype==ASSGN
ASSGN
print ASSGN
print ARR
print (nodetype == ARR)
print l->nodetype 
print *l->nodetype 
print *(l->nodetype) 
print (l->nodetype) 
print l
print *l
print *(l->gEntry )
print *r
s
s
print l->type
print r->type
s
s
q
list createTree
b 43
run inpfile 
print(val)
print(c)
print(*c)
print (gEntry )
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
print(lEntry )
c
print(lEntry )
print(*lEntry )
q
run inpfile 
list makeFuncCallNode 
list makeFuncCallNode 
b 111
run inpfile 
print *arglist 
print *arglist->argslist 
print *(arglist->argslist) 
print *(arglist->argslist->argslist) 
q
list makeFuncCallNode 
b 111
run inpfile 
tt=arglist
tt = arglist
tt
print tt
print *tt
print *arglist
print arglist->argslist 
print *(arglist->argslist) 
print *(arglist->argslist->argslist) 
q
list makeFuncCallNode 
b 111
print *arglist
run inpfile 
print *arglist
print *(arglist->argslist) 
q
list syntaxtree.y
list makeReturnNode : syntaxtree.y
l syntaxtree.y
list
list
q
list
l 100
break 291
run inpfile 
print *LsymbolHead 
print LsymbolHead 
l codegen.c
l codeGen
break 525
break 528
run inpfile 
c
run inpfile 
q
run
run inpfile 
l
print t
print *t
l 2:syntaxtree.y
l 2 syntaxtree.y
l syntaxtree.y
q
run inpfile 
q
l getVarPos 
b 86
run inpfile 
q
l getVarPos 
b 86
run inpfile 
print Gsymbol
print *head
run inpfile 
c
c
run inpfile 
c
print t
print ch
print LsymbolH
print LsymbolHead 
c
q
l getVarPos 
b 86
run inpfile 
c
s
s
s
s
print Ltemp 
s
c
q
l codeGen
l 506
b 506
run inpfile 
print *t
print t->lEntry 
print *t->lEntry 
s
s
s
s
s
s
s
s
c
q
l codeGen
l 500
l 296
b 296
b 298
run inpfile 
print *t
print t->l
print t->left
print *t->left
print *(t->left->lEntry )
c
run inpfile 
print *(t->left->lEntry )
s
s
print LsymbolH
print LsymbolHead 
c
run inpfile 
print LsymbolHead 
q
q
